import matplotlib.pyplot as plt; import pandas as pd; import geopandas as gpd; import matplotlib; from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg; from tkinter import *; from matplotlib.figure import Figure; from bs4 import BeautifulSoup; import requests; import re; matplotlib.use("TkAgg"); page = BeautifulSoup(requests.get('https://www.worldometers.info/coronavirus/worldwide-graphs/').text, 'html.parser').findAll('script'); value = [int(i.replace('\"value\":', '').replace('}', '').replace('{', '').replace(']', '').replace('[', '')) for i in [re.findall('var graphData = .+', str(i)) for i in page if re.findall('var graphData = .+', str(i))][-1][0].split(',{"name":')[-1].split(',') if 'value' in i]; cca3 = [i.replace('\"', '').replace('cca3', '').replace('}', '').replace('{', '').replace(':', '').replace('[', '').replace(']', '').replace('data', '') for i in [re.findall('var graphData = .+', str(i)) for i in page if re.findall('var graphData = .+', str(i))][-1][0].split(',{"name":')[-1].split(',') if 'cca3' in i]; df = pd.DataFrame(list(zip(cca3, value)), columns = ['Country Code', 'Numbers']); date = [re.findall('var graphData = .+', str(i)) for i in page if re.findall('var graphData = .+', str(i))][-1][0].split(',{"name":')[-1].split(',')[0].replace('\"', ''); cluslist = [10, 20, 50, 100, 200, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 500000, 1000000, 2000000, 10000000, 20000000]; gdf = gpd.read_file('data/ne_10m_admin_0_countries_lakes.shp')[['ADM0_A3', 'geometry']].to_crs('+proj=robin'); gdf.sample(5); ax = gdf.merge(df, left_on='ADM0_A3', right_on='Country Code').plot(column='Numbers', cmap='YlOrRd', figsize=(15, 9), scheme='user_defined', classification_kwds={'bins': cluslist}, legend=True); ax.set_title('Covid-19 Choropleth Map', fontdict={'fontsize': 30, 'fontfamily':'Bahnschrift'}, loc='center', color="#FFFFFF"); ax.get_legend().texts[0].set_text('0 - ' + str(cluslist[0])); [ax.get_legend().texts[txt].set_text(str(cluslist[txt-1])+' - ' + str(cluslist[txt])) for txt in range(1, len(ax.get_legend().texts))]; [i.set_color("white") for i in ax.get_legend().texts]; ax.set_axis_off(); ax.set_xlim([-1.5e7, 1.7e7]); ax.get_legend().set_bbox_to_anchor((.12, .5)); ax.get_legend().get_frame().set_linewidth(0.0); ax.get_legend().get_frame().set_facecolor('#191919'); ax.get_figure().patch.set_facecolor('#191919'); root = Tk(); root.state('zoomed'); root.config(bg='#191919'); canvas = FigureCanvasTkAgg(ax.get_figure(), root).get_tk_widget(); canvas.pack(); root.mainloop()
